import networkx as nx

class Contrib_group:
    def __init__(self):
        self.name = 'contrib-group' 
        self.DTD  = self.make_DTD()

    def make_DTD(self):
        G = nx.DiGraph()
        #adding nodes
        G.add_node('start')
        G.add_node('accept')
        G.add_node('contrib')
        G.add_node('address')
        G.add_node('aff')
        G.add_node('aff-alternatives')
        G.add_node('author-comment')
        G.add_node('bio')
        G.add_node('email')
        G.add_node('etal')
        G.add_node('ext-link')
        G.add_node('fn')
        G.add_node('on-behalf-of')
        G.add_node('role')
        G.add_node('uri')
        G.add_node('xref')
        G.add_node('x')
        #adding edges
        G.add_edge('start', 'contrib')
        G.add_edge('start', 'address')
        G.add_edge('start', 'aff')
        G.add_edge('start', 'aff-alternatives')
        G.add_edge('start', 'author-comment')
        G.add_edge('start', 'bio')
        G.add_edge('start', 'email')
        G.add_edge('start', 'etal')
        G.add_edge('start', 'ext-link')
        G.add_edge('start', 'fn')
        G.add_edge('start', 'on-behalf-of')
        G.add_edge('start', 'role')
        G.add_edge('start', 'uri')
        G.add_edge('start', 'xref')
        G.add_edge('start', 'x')
        G.add_edge('start', 'accept')
        G.add_edge('contrib', 'accept')
        G.add_edge('address', 'accept')
        G.add_edge('aff', 'accept')
        G.add_edge('aff-alternatives', 'accept')
        G.add_edge('author-comment', 'accept')
        G.add_edge('bio', 'accept')
        G.add_edge('email', 'accept')
        G.add_edge('etal', 'accept')
        G.add_edge('ext-link', 'accept')
        G.add_edge('fn', 'accept')
        G.add_edge('on-behalf-of', 'accept')
        G.add_edge('role', 'accept')
        G.add_edge('uri', 'accept')
        G.add_edge('xref', 'accept')
        G.add_edge('x', 'accept')
        return G